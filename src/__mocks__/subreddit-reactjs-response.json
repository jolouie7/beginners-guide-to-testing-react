{
  "kind": "Listing",
  "data": {
    "modhash": "",
    "dist": 25,
    "children": [
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "reactjs",
          "selftext": "",
          "author_fullname": "t2_115t67",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "A highly scalable, performance focused React starter template, that focuses on best practices and a great developer experience.",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/reactjs",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "link-flair-resource",
          "downs": 0,
          "thumbnail_height": 70,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_hh9rxn",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 0.95,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 292,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": 140,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "Resource",
          "can_mod_post": false,
          "score": 292,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "https://b.thumbs.redditmedia.com/efyblE9b5U1VeJgKq8l-C6P1TX1Zpj9ohhOCxtjCj8I.jpg",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "post_hint": "link",
          "content_categories": null,
          "is_self": false,
          "mod_note": null,
          "created": 1593354820.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "github.com",
          "allow_live_comments": false,
          "selftext_html": null,
          "likes": null,
          "suggested_sort": "confidence",
          "banned_at_utc": null,
          "url_overridden_by_dest": "https://github.com/react-boilerplate/react-boilerplate-cra-template/",
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "preview": {
            "images": [
              {
                "source": {
                  "url": "https://external-preview.redd.it/pcXu2jQA8QIveAv0I9wpJv8l7CW5rtHrPwnXvYOZdeA.jpg?auto=webp&amp;s=10d93ba2256a9676eef2e6b28f5dbe74441e4677",
                  "width": 1280,
                  "height": 640
                },
                "resolutions": [
                  {
                    "url": "https://external-preview.redd.it/pcXu2jQA8QIveAv0I9wpJv8l7CW5rtHrPwnXvYOZdeA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=2cc2eded6bc9d0d290be3998df773f5377223c62",
                    "width": 108,
                    "height": 54
                  },
                  {
                    "url": "https://external-preview.redd.it/pcXu2jQA8QIveAv0I9wpJv8l7CW5rtHrPwnXvYOZdeA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c6b6a7b925f0c0e9dcde433d2cf66ac465620b8d",
                    "width": 216,
                    "height": 108
                  },
                  {
                    "url": "https://external-preview.redd.it/pcXu2jQA8QIveAv0I9wpJv8l7CW5rtHrPwnXvYOZdeA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e40eb82b750acff546e64ac1a09ce18b332989f6",
                    "width": 320,
                    "height": 160
                  },
                  {
                    "url": "https://external-preview.redd.it/pcXu2jQA8QIveAv0I9wpJv8l7CW5rtHrPwnXvYOZdeA.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=c42918153f232fa3e3fb79d204204e0c4f1e87f4",
                    "width": 640,
                    "height": 320
                  },
                  {
                    "url": "https://external-preview.redd.it/pcXu2jQA8QIveAv0I9wpJv8l7CW5rtHrPwnXvYOZdeA.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=57bbb8b46a6b3d7fc19bbd5be9989990c8815ddd",
                    "width": 960,
                    "height": 480
                  },
                  {
                    "url": "https://external-preview.redd.it/pcXu2jQA8QIveAv0I9wpJv8l7CW5rtHrPwnXvYOZdeA.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=a2eae6b38a50e80b9f8c5296fb9da5da0a3d9aab",
                    "width": 1080,
                    "height": 540
                  }
                ],
                "variants": {},
                "id": "gA54ZG-c1or6d2mAqLRMLH4JpGkxrtiiHD4ysr2YnMo"
              }
            ],
            "enabled": false
          },
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "16439f02-8522-11e8-8849-0e66852ea1ba",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2zldd",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "#ffd635",
          "id": "hh9rxn",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "rockiger",
          "discussion_type": null,
          "num_comments": 31,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/reactjs/comments/hh9rxn/a_highly_scalable_performance_focused_react/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://github.com/react-boilerplate/react-boilerplate-cra-template/",
          "subreddit_subscribers": 196763,
          "created_utc": 1593326020.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "reactjs",
          "selftext": "I dont really need the extra money but should i freelance react development  outside of work and maybe move into full time in a few years?",
          "author_fullname": "t2_3mlsxpjx",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "I have a good corporate job not programming but I taught myself js and react for fun and I just kind of like it.",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/reactjs",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "thumbnail_height": null,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_hhplsv",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 0.92,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 52,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 52,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "self",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1593418553.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.reactjs",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I dont really need the extra money but should i freelance react development  outside of work and maybe move into full time in a few years?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": "confidence",
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2zldd",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "hhplsv",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "pawnh4",
          "discussion_type": null,
          "num_comments": 17,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/reactjs/comments/hhplsv/i_have_a_good_corporate_job_not_programming_but_i/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/reactjs/comments/hhplsv/i_have_a_good_corporate_job_not_programming_but_i/",
          "subreddit_subscribers": 196763,
          "created_utc": 1593389753.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "reactjs",
          "selftext": "I've created a chat application w/ Socket.IO. Real-time applications are fun. It is deployed on a free Heroku dyno. So, some processes takes time. But I think this was a cool prototype to study Socket.IO. And it's just a great library!\n\nThere are things to be improved/fixed, but you know how the process is :)\n\nCore Features:  \n\\- Creating chat rooms for real-time chat  \n\\- JWT based anonymous authentication  \n\\- Users can set their username and conversation bubble color  \n\\- Sending images/gifs  \n\\- Emoji picker  \n\\- \"User is typing\" notifications  \n\\- Dark theme  \n\\- Automatically linkifying urls, emails etc  \n\\- Invite/share buttons  \n\\- Sound notification when the window is not focused  \n\\- \"Back to bottom\" button to scroll down automatically\n\nTech Stack:  \n\\- API Framework: Express  \n\\- Real-Time Engine: Socket.IO  \n\\- Authentication: JSON Web Token  \n\\- UI Components: Material-UI  \n\\- Styling: styled-components  \n\\- Forms: Formik  \n\\- Form Validations: Yup  \n\\- Illustrations: unDraw  \n\\- Linting: ESLint  \n\\- Code formatting: Prettier\n\nYou can find a link to project codes on the application header.\n\n[https://bubbly-chat.herokuapp.com/](https://l.facebook.com/l.php?u=https%3A%2F%2Fbubbly-chat.herokuapp.com%2F%3Ffbclid%3DIwAR35Z84WL3yPXXYZp2-FpbFIAKcHA2JeZEwjP9NwB_ylhzkHao8AL1TikfA&amp;h=AT2sZwmVKnCelWe5Z4myQ4iOfpDRZCkiVNS6WGBMhvvlUtRNETPyp_JYM5ys12VCbUMOjOz2IeYbdVvVndEFrraLKWcC_J9LwvJXFHs10XSQBxsXgOrP0JiP2bTKEbFfOQ&amp;__tn__=-UK-R&amp;c[0]=AT3UQWjr207I8ic75xmTTO8Kgq8k8ol2Yq2yY5X3RBvWtqi7helILGek4dX21By1BA3dF8K0F3-rXEe9yfvWRdnrGfBGpu4OtsMOXL0mzTJf4evfUZKScNr7vxKvJxSNXL3z9hmM5Ep-GctkcmlyDtkJYIaATCs)  \n[https://github.com/onderonur/bubbly](https://github.com/onderonur/bubbly)",
          "author_fullname": "t2_5cvpl7lr",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Built a Chat Application w/ Socket.IO, Express, React &amp; TypeScript",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/reactjs",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "link-flair-show",
          "downs": 0,
          "thumbnail_height": null,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_hhfooc",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 0.86,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 20,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "Show /r/reactjs",
          "can_mod_post": false,
          "score": 20,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "self",
          "edited": 1593356133.0,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1593384725.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.reactjs",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve created a chat application w/ Socket.IO. Real-time applications are fun. It is deployed on a free Heroku dyno. So, some processes takes time. But I think this was a cool prototype to study Socket.IO. And it&amp;#39;s just a great library!&lt;/p&gt;\n\n&lt;p&gt;There are things to be improved/fixed, but you know how the process is :)&lt;/p&gt;\n\n&lt;p&gt;Core Features:&lt;br/&gt;\n- Creating chat rooms for real-time chat&lt;br/&gt;\n- JWT based anonymous authentication&lt;br/&gt;\n- Users can set their username and conversation bubble color&lt;br/&gt;\n- Sending images/gifs&lt;br/&gt;\n- Emoji picker&lt;br/&gt;\n- &amp;quot;User is typing&amp;quot; notifications&lt;br/&gt;\n- Dark theme&lt;br/&gt;\n- Automatically linkifying urls, emails etc&lt;br/&gt;\n- Invite/share buttons&lt;br/&gt;\n- Sound notification when the window is not focused&lt;br/&gt;\n- &amp;quot;Back to bottom&amp;quot; button to scroll down automatically&lt;/p&gt;\n\n&lt;p&gt;Tech Stack:&lt;br/&gt;\n- API Framework: Express&lt;br/&gt;\n- Real-Time Engine: Socket.IO&lt;br/&gt;\n- Authentication: JSON Web Token&lt;br/&gt;\n- UI Components: Material-UI&lt;br/&gt;\n- Styling: styled-components&lt;br/&gt;\n- Forms: Formik&lt;br/&gt;\n- Form Validations: Yup&lt;br/&gt;\n- Illustrations: unDraw&lt;br/&gt;\n- Linting: ESLint&lt;br/&gt;\n- Code formatting: Prettier&lt;/p&gt;\n\n&lt;p&gt;You can find a link to project codes on the application header.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://l.facebook.com/l.php?u=https%3A%2F%2Fbubbly-chat.herokuapp.com%2F%3Ffbclid%3DIwAR35Z84WL3yPXXYZp2-FpbFIAKcHA2JeZEwjP9NwB_ylhzkHao8AL1TikfA&amp;amp;h=AT2sZwmVKnCelWe5Z4myQ4iOfpDRZCkiVNS6WGBMhvvlUtRNETPyp_JYM5ys12VCbUMOjOz2IeYbdVvVndEFrraLKWcC_J9LwvJXFHs10XSQBxsXgOrP0JiP2bTKEbFfOQ&amp;amp;__tn__=-UK-R&amp;amp;c%5B0%5D=AT3UQWjr207I8ic75xmTTO8Kgq8k8ol2Yq2yY5X3RBvWtqi7helILGek4dX21By1BA3dF8K0F3-rXEe9yfvWRdnrGfBGpu4OtsMOXL0mzTJf4evfUZKScNr7vxKvJxSNXL3z9hmM5Ep-GctkcmlyDtkJYIaATCs\"&gt;https://bubbly-chat.herokuapp.com/&lt;/a&gt;&lt;br/&gt;\n&lt;a href=\"https://github.com/onderonur/bubbly\"&gt;https://github.com/onderonur/bubbly&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": "confidence",
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "bd8d97ec-8520-11e8-9179-0e39e47dc3fc",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2zldd",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "#ab912b",
          "id": "hhfooc",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "onderonur",
          "discussion_type": null,
          "num_comments": 11,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/reactjs/comments/hhfooc/built_a_chat_application_w_socketio_express_react/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/reactjs/comments/hhfooc/built_a_chat_application_w_socketio_express_react/",
          "subreddit_subscribers": 196763,
          "created_utc": 1593355925.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "reactjs",
          "selftext": "So going through a web development Bootcamp I created my own Anime list using React js.\n\nHere's the link to my [website](https://laraib-sidd.github.io/anime-list/).\n\nI have updated the Readme with instructions to create your own with minimalistic steps.\n\nThis is my first big project with a maintained [repository](https://github.com/laraib-sidd/anime-list).\n\nPlease feel free to review my code and make pull requests.",
          "author_fullname": "t2_2szjpupq",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "I created My own Anime List.",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/reactjs",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "link-flair-show",
          "downs": 0,
          "thumbnail_height": null,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_hhhjs0",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 0.83,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 18,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "Show /r/reactjs",
          "can_mod_post": false,
          "score": 18,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "self",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1593391149.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.reactjs",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;So going through a web development Bootcamp I created my own Anime list using React js.&lt;/p&gt;\n\n&lt;p&gt;Here&amp;#39;s the link to my &lt;a href=\"https://laraib-sidd.github.io/anime-list/\"&gt;website&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;I have updated the Readme with instructions to create your own with minimalistic steps.&lt;/p&gt;\n\n&lt;p&gt;This is my first big project with a maintained &lt;a href=\"https://github.com/laraib-sidd/anime-list\"&gt;repository&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Please feel free to review my code and make pull requests.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": "confidence",
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "bd8d97ec-8520-11e8-9179-0e39e47dc3fc",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2zldd",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "#ab912b",
          "id": "hhhjs0",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "laraib_sidd",
          "discussion_type": null,
          "num_comments": 4,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/reactjs/comments/hhhjs0/i_created_my_own_anime_list/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/reactjs/comments/hhhjs0/i_created_my_own_anime_list/",
          "subreddit_subscribers": 196763,
          "created_utc": 1593362349.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "reactjs",
          "selftext": "Hey so I've been working my own form library for personal and professional projects for quite some time now and a while ago I accidentally stumbled on an interesting pattern in React which I've never encountered anywhere else before. I'm not sure how useful it is outside of my use case but I'm curious to hear what people think and if they've encountered something like this before. Let's take a look:\n\n```\n// First you create a React context\nconst context = React.createContext();\nconst { Provider } = context;\n\n// We'll keep all our state in the Root component...\n// this is the first \"Provider\" in Provider-Consumer-Provider\nfunction Root({ children, value }) {\n  return &lt;Provider value={value}&gt;{children}&lt;/Provider&gt;;\n}\n\n// A Node component consumes the context and receives a name prop\nfunction Node({ name, children }) {\n  // this line is the \"Consumer\" in Provider-Consumer-Provider\n  const value = useContext(context);\n  // the name prop is used to access a property off the context value\n  const nodeValue = value[name];\n\n  // this value is then forwarded onto a Provider (of the same context!)\n  // let that sink in for a minute...\n  // this is the second \"Provider\" in Provider-Consumer-Provider\n  return &lt;Provider value={nodeValue}&gt;{children}&lt;/Provider&gt;;\n}\n\n// A Leaf component is a pure context consumer and just renders children as a function\nfunction Leaf({ name, children }) {\n  const value = useContext(context);\n  return children(value[name]);\n}\n\n```\n\nSo what does this enable us to do? Let's take a look:\n\n```\nfunction Example() {\n const value = {\n    profile: {\n      fullName: \"John Smith\",\n      email: \"john@blah.com\"\n    }\n  };\n\n  return (\n    &lt;Root value={value}&gt;\n      &lt;Node name=\"profile\"&gt;\n        FULL NAME:\n        &lt;Leaf name=\"fullName\"&gt;{value =&gt; &lt;span&gt;{value}&lt;/span&gt;}&lt;/Leaf&gt;\n        EMAIL:\n        &lt;Leaf name=\"email\"&gt;{value =&gt; &lt;span&gt;{value}&lt;/span&gt;}&lt;/Leaf&gt;\n      &lt;/Node&gt;\n    &lt;/Root&gt;\n  );\n}\n```\n\n### what's happening?\n\nAt every `&lt;Node /&gt;` and `&lt;Leaf /&gt;`, the original value that has been supplied to the Root is \"split\" and then forwarded onto the next `Provider`.\n\n### how does it work?\n\nThis is just the way React context works and we're taking advantage of this quirk. From the React docs:\n\n&gt; The value argument passed to the [Consumer render prop] function will be equal to the value prop of the *closest* Provider. See [here](https://reactjs.org/docs/context.html#contextconsumer)\n\n### How I'm using it\n\nI've got a form library where I make use of this pattern. I can use the structure of my components to create \"depth\" in my forms. Form libraries like Formik or redux-form use so called \"string paths\" for this which IMO are an eye sore - especially when working with field arrays. In formik one would write\n\n```\n&lt;Form&gt;\n  &lt;Field name=\"profile.fullName\" /&gt;\n  &lt;Field name=\"profile.email\" /&gt;\n&lt;Form&gt;\n```\n\nInstead, with a little more typing I can do the following and have the string paths be build up behind the scenes:\n\n```\n&lt;Form&gt;\n  &lt;Section name=\"profile\"&gt;\n    &lt;Field name=\"fullName\" /&gt;\n    &lt;Field name=\"email\" /&gt;\n  &lt;/Section&gt;\n&lt;/Form&gt;\n```\n\nPerhaps one benefit of this pattern for forms is that it is easier to change or modify shape of data your form works with since I don't have to repeatedly type of string paths (see `\"profile.\"`). I can also group fields with a `&lt;Section /&gt;` component. \n\nSo my question are these: has anyone seen or perhaps used this pattern before? What are your thoughts? Ideas for usage outside this use case?\n\n## Links:\n\n* [Example above](https://codesandbox.io/s/peaceful-blackburn-et46z)\n* [Docs](https://stuburger.github.io/yafl/)\n* [Github](https://github.com/stuburger/yafl)",
          "author_fullname": "t2_28bcnmcb",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "An interesting (new?) pattern in React I've been calling Provider-Consumer-Provider pattern",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/reactjs",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "link-flair-show",
          "downs": 0,
          "thumbnail_height": null,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_hhcw6q",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 0.71,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 9,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "Show /r/reactjs",
          "can_mod_post": false,
          "score": 9,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "self",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "post_hint": "self",
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1593372689.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.reactjs",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey so I&amp;#39;ve been working my own form library for personal and professional projects for quite some time now and a while ago I accidentally stumbled on an interesting pattern in React which I&amp;#39;ve never encountered anywhere else before. I&amp;#39;m not sure how useful it is outside of my use case but I&amp;#39;m curious to hear what people think and if they&amp;#39;ve encountered something like this before. Let&amp;#39;s take a look:&lt;/p&gt;\n\n&lt;p&gt;```\n// First you create a React context\nconst context = React.createContext();\nconst { Provider } = context;&lt;/p&gt;\n\n&lt;p&gt;// We&amp;#39;ll keep all our state in the Root component...\n// this is the first &amp;quot;Provider&amp;quot; in Provider-Consumer-Provider\nfunction Root({ children, value }) {\n  return &amp;lt;Provider value={value}&amp;gt;{children}&amp;lt;/Provider&amp;gt;;\n}&lt;/p&gt;\n\n&lt;p&gt;// A Node component consumes the context and receives a name prop\nfunction Node({ name, children }) {\n  // this line is the &amp;quot;Consumer&amp;quot; in Provider-Consumer-Provider\n  const value = useContext(context);\n  // the name prop is used to access a property off the context value\n  const nodeValue = value[name];&lt;/p&gt;\n\n&lt;p&gt;// this value is then forwarded onto a Provider (of the same context!)\n  // let that sink in for a minute...\n  // this is the second &amp;quot;Provider&amp;quot; in Provider-Consumer-Provider\n  return &amp;lt;Provider value={nodeValue}&amp;gt;{children}&amp;lt;/Provider&amp;gt;;\n}&lt;/p&gt;\n\n&lt;p&gt;// A Leaf component is a pure context consumer and just renders children as a function\nfunction Leaf({ name, children }) {\n  const value = useContext(context);\n  return children(value[name]);\n}&lt;/p&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n\n&lt;p&gt;So what does this enable us to do? Let&amp;#39;s take a look:&lt;/p&gt;\n\n&lt;p&gt;```\nfunction Example() {\n const value = {\n    profile: {\n      fullName: &amp;quot;John Smith&amp;quot;,\n      email: &amp;quot;&lt;a href=\"mailto:john@blah.com\"&gt;john@blah.com&lt;/a&gt;&amp;quot;\n    }\n  };&lt;/p&gt;\n\n&lt;p&gt;return (\n    &amp;lt;Root value={value}&amp;gt;\n      &amp;lt;Node name=&amp;quot;profile&amp;quot;&amp;gt;\n        FULL NAME:\n        &amp;lt;Leaf name=&amp;quot;fullName&amp;quot;&amp;gt;{value =&amp;gt; &amp;lt;span&amp;gt;{value}&amp;lt;/span&amp;gt;}&amp;lt;/Leaf&amp;gt;\n        EMAIL:\n        &amp;lt;Leaf name=&amp;quot;email&amp;quot;&amp;gt;{value =&amp;gt; &amp;lt;span&amp;gt;{value}&amp;lt;/span&amp;gt;}&amp;lt;/Leaf&amp;gt;\n      &amp;lt;/Node&amp;gt;\n    &amp;lt;/Root&amp;gt;\n  );\n}\n```&lt;/p&gt;\n\n&lt;h3&gt;what&amp;#39;s happening?&lt;/h3&gt;\n\n&lt;p&gt;At every &lt;code&gt;&amp;lt;Node /&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;Leaf /&amp;gt;&lt;/code&gt;, the original value that has been supplied to the Root is &amp;quot;split&amp;quot; and then forwarded onto the next &lt;code&gt;Provider&lt;/code&gt;.&lt;/p&gt;\n\n&lt;h3&gt;how does it work?&lt;/h3&gt;\n\n&lt;p&gt;This is just the way React context works and we&amp;#39;re taking advantage of this quirk. From the React docs:&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;The value argument passed to the [Consumer render prop] function will be equal to the value prop of the &lt;em&gt;closest&lt;/em&gt; Provider. See &lt;a href=\"https://reactjs.org/docs/context.html#contextconsumer\"&gt;here&lt;/a&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;h3&gt;How I&amp;#39;m using it&lt;/h3&gt;\n\n&lt;p&gt;I&amp;#39;ve got a form library where I make use of this pattern. I can use the structure of my components to create &amp;quot;depth&amp;quot; in my forms. Form libraries like Formik or redux-form use so called &amp;quot;string paths&amp;quot; for this which IMO are an eye sore - especially when working with field arrays. In formik one would write&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\n&amp;lt;Form&amp;gt;\n  &amp;lt;Field name=&amp;quot;profile.fullName&amp;quot; /&amp;gt;\n  &amp;lt;Field name=&amp;quot;profile.email&amp;quot; /&amp;gt;\n&amp;lt;Form&amp;gt;\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Instead, with a little more typing I can do the following and have the string paths be build up behind the scenes:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\n&amp;lt;Form&amp;gt;\n  &amp;lt;Section name=&amp;quot;profile&amp;quot;&amp;gt;\n    &amp;lt;Field name=&amp;quot;fullName&amp;quot; /&amp;gt;\n    &amp;lt;Field name=&amp;quot;email&amp;quot; /&amp;gt;\n  &amp;lt;/Section&amp;gt;\n&amp;lt;/Form&amp;gt;\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Perhaps one benefit of this pattern for forms is that it is easier to change or modify shape of data your form works with since I don&amp;#39;t have to repeatedly type of string paths (see &lt;code&gt;&amp;quot;profile.&amp;quot;&lt;/code&gt;). I can also group fields with a &lt;code&gt;&amp;lt;Section /&amp;gt;&lt;/code&gt; component. &lt;/p&gt;\n\n&lt;p&gt;So my question are these: has anyone seen or perhaps used this pattern before? What are your thoughts? Ideas for usage outside this use case?&lt;/p&gt;\n\n&lt;h2&gt;Links:&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"https://codesandbox.io/s/peaceful-blackburn-et46z\"&gt;Example above&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://stuburger.github.io/yafl/\"&gt;Docs&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://github.com/stuburger/yafl\"&gt;Github&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": "confidence",
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "preview": {
            "images": [
              {
                "source": {
                  "url": "https://external-preview.redd.it/oTjvfs5JY6wi56P4phBzU3vDtJE5ls7uNid4oHtrHuI.jpg?auto=webp&amp;s=197d811ac037d145d3203075d3934a77786cdd36",
                  "width": 1200,
                  "height": 630
                },
                "resolutions": [
                  {
                    "url": "https://external-preview.redd.it/oTjvfs5JY6wi56P4phBzU3vDtJE5ls7uNid4oHtrHuI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=7db744c3115c6920b6eca86a4ea7b2ec23ab651d",
                    "width": 108,
                    "height": 56
                  },
                  {
                    "url": "https://external-preview.redd.it/oTjvfs5JY6wi56P4phBzU3vDtJE5ls7uNid4oHtrHuI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=4e5aca817550e9ead531103a18f9e1c7a4d8087e",
                    "width": 216,
                    "height": 113
                  },
                  {
                    "url": "https://external-preview.redd.it/oTjvfs5JY6wi56P4phBzU3vDtJE5ls7uNid4oHtrHuI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=94f5d2aaea787b15e1dd2173edec30ce04e587de",
                    "width": 320,
                    "height": 168
                  },
                  {
                    "url": "https://external-preview.redd.it/oTjvfs5JY6wi56P4phBzU3vDtJE5ls7uNid4oHtrHuI.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=88e04b0347fb830bbabb5f1e573f20fe1cedb626",
                    "width": 640,
                    "height": 336
                  },
                  {
                    "url": "https://external-preview.redd.it/oTjvfs5JY6wi56P4phBzU3vDtJE5ls7uNid4oHtrHuI.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=a723fa969d6d97db5109c68ea2276e517011498f",
                    "width": 960,
                    "height": 504
                  },
                  {
                    "url": "https://external-preview.redd.it/oTjvfs5JY6wi56P4phBzU3vDtJE5ls7uNid4oHtrHuI.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=b511666d4318c18b4300565c1f627120f9e35a68",
                    "width": 1080,
                    "height": 567
                  }
                ],
                "variants": {},
                "id": "ek_ixAp6Ir6UtlIEoswH3vum83sE3lYiacTqgsQHpCI"
              }
            ],
            "enabled": false
          },
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "bd8d97ec-8520-11e8-9179-0e39e47dc3fc",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2zldd",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "#ab912b",
          "id": "hhcw6q",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "stuburgerUK",
          "discussion_type": null,
          "num_comments": 16,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/reactjs/comments/hhcw6q/an_interesting_new_pattern_in_react_ive_been/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/reactjs/comments/hhcw6q/an_interesting_new_pattern_in_react_ive_been/",
          "subreddit_subscribers": 196763,
          "created_utc": 1593343889.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "reactjs",
          "selftext": "Hi guys,\n\n&amp;#x200B;\n\nRecently I learned about react and neumorphism, and I combined this two into one. With nuoreact you can create neumorphism inspired react components into your next project. Check out the docs and github link over here.\n\n&amp;#x200B;\n\n[https://nuoreact-docs.firebaseapp.com/](https://nuoreact-docs.firebaseapp.com/)\n\n&amp;#x200B;\n\n[https://github.com/jithinlal/react-neumorph](https://github.com/jithinlal/react-neumorph)\n\n&amp;#x200B;\n\n&amp;#x200B;\n\nCheck out and let me know about the feedback, and pull requests are always welcome.",
          "author_fullname": "t2_13k4fr",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "I created a new react component library that embrace neumorphism",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/reactjs",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "link-flair-show",
          "downs": 0,
          "thumbnail_height": null,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_hhdl4n",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 0.7,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 4,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "Show /r/reactjs",
          "can_mod_post": false,
          "score": 4,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "self",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "post_hint": "self",
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1593376244.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.reactjs",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi guys,&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Recently I learned about react and neumorphism, and I combined this two into one. With nuoreact you can create neumorphism inspired react components into your next project. Check out the docs and github link over here.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://nuoreact-docs.firebaseapp.com/\"&gt;https://nuoreact-docs.firebaseapp.com/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/jithinlal/react-neumorph\"&gt;https://github.com/jithinlal/react-neumorph&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Check out and let me know about the feedback, and pull requests are always welcome.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": "confidence",
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "preview": {
            "images": [
              {
                "source": {
                  "url": "https://external-preview.redd.it/MXWEUJNrqH-FZ6sLmgNi73n3Od5zgtGi1TYF4NzwYwA.jpg?auto=webp&amp;s=5551e3aa7788bde51eb1b5ce930c64fbfe2940c2",
                  "width": 873,
                  "height": 762
                },
                "resolutions": [
                  {
                    "url": "https://external-preview.redd.it/MXWEUJNrqH-FZ6sLmgNi73n3Od5zgtGi1TYF4NzwYwA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=aa56c544bd12bc2e811ebc7693fd1533a884309f",
                    "width": 108,
                    "height": 94
                  },
                  {
                    "url": "https://external-preview.redd.it/MXWEUJNrqH-FZ6sLmgNi73n3Od5zgtGi1TYF4NzwYwA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c01b9b1297724911e028a1f711bd8f508fbd0c0a",
                    "width": 216,
                    "height": 188
                  },
                  {
                    "url": "https://external-preview.redd.it/MXWEUJNrqH-FZ6sLmgNi73n3Od5zgtGi1TYF4NzwYwA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=8b3c1b87be53897555665cca0d5d53d54d561804",
                    "width": 320,
                    "height": 279
                  },
                  {
                    "url": "https://external-preview.redd.it/MXWEUJNrqH-FZ6sLmgNi73n3Od5zgtGi1TYF4NzwYwA.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=5fb3e5094564de6a23ab3744679b0871d9c169f0",
                    "width": 640,
                    "height": 558
                  }
                ],
                "variants": {},
                "id": "M1PJ-5Pyx_Olvxrkgoa3OULiygH3azpmnj_AQ-BrX6k"
              }
            ],
            "enabled": false
          },
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "bd8d97ec-8520-11e8-9179-0e39e47dc3fc",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2zldd",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "#ab912b",
          "id": "hhdl4n",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "jithtitan",
          "discussion_type": null,
          "num_comments": 10,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/reactjs/comments/hhdl4n/i_created_a_new_react_component_library_that/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/reactjs/comments/hhdl4n/i_created_a_new_react_component_library_that/",
          "subreddit_subscribers": 196763,
          "created_utc": 1593347444.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "reactjs",
          "selftext": "Hi, I'm trying to use both redux-toolkit and redux-orm in my project, and having troubles marrying the two. If anyone has links to any projects that successfully achieve that, please share!",
          "author_fullname": "t2_3tw4g0uf",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Redux-toolkit + redux-orm projects",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/reactjs",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "link-flair-needs-help",
          "downs": 0,
          "thumbnail_height": null,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_hhhui8",
          "quarantine": false,
          "link_flair_text_color": "light",
          "upvote_ratio": 0.75,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 2,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "Needs Help",
          "can_mod_post": false,
          "score": 2,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "self",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1593392160.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.reactjs",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi, I&amp;#39;m trying to use both redux-toolkit and redux-orm in my project, and having troubles marrying the two. If anyone has links to any projects that successfully achieve that, please share!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": "confidence",
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": false,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "c808a3ce-8520-11e8-b3d4-0e03aa55af0c",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2zldd",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "#b8001f",
          "id": "hhhui8",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "lokriet",
          "discussion_type": null,
          "num_comments": 3,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/reactjs/comments/hhhui8/reduxtoolkit_reduxorm_projects/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/reactjs/comments/hhhui8/reduxtoolkit_reduxorm_projects/",
          "subreddit_subscribers": 196763,
          "created_utc": 1593363360.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "reactjs",
          "selftext": "Comment your ideas of a perfect directory structure and the best practices you follow for React",
          "author_fullname": "t2_2jz5u94h",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Share your best practices",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/reactjs",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "thumbnail_height": null,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_hhgky5",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 0.75,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 2,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 2,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "self",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1593387855.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.reactjs",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Comment your ideas of a perfect directory structure and the best practices you follow for React&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": "confidence",
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2zldd",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "hhgky5",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "wardaddytwelve",
          "discussion_type": null,
          "num_comments": 3,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/reactjs/comments/hhgky5/share_your_best_practices/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/reactjs/comments/hhgky5/share_your_best_practices/",
          "subreddit_subscribers": 196763,
          "created_utc": 1593359055.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "reactjs",
          "selftext": "Hello, I am a full stack web dev mainly focused on (reactjs) as my framework of choice and currently going on 5 months strong. And I am planning to start applying for jobs next year. Currently I have made a really deep social media platform for developers (took me 2 months)and I am looking for more ideas that would be great to put into my portfolio. Please if you have suggestions that would be great..preferably full stack web apps and projects that would make my portfolio look like a shining star.\ud83d\ude0a\nThanks for the help",
          "author_fullname": "t2_wuma5",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Portfolio projects for employment",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/reactjs",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "thumbnail_height": null,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_hhfd0s",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 0.75,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 2,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 2,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "self",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1593383574.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.reactjs",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello, I am a full stack web dev mainly focused on (reactjs) as my framework of choice and currently going on 5 months strong. And I am planning to start applying for jobs next year. Currently I have made a really deep social media platform for developers (took me 2 months)and I am looking for more ideas that would be great to put into my portfolio. Please if you have suggestions that would be great..preferably full stack web apps and projects that would make my portfolio look like a shining star.\ud83d\ude0a\nThanks for the help&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": "confidence",
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2zldd",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "hhfd0s",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "trickshot711",
          "discussion_type": null,
          "num_comments": 4,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/reactjs/comments/hhfd0s/portfolio_projects_for_employment/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/reactjs/comments/hhfd0s/portfolio_projects_for_employment/",
          "subreddit_subscribers": 196763,
          "created_utc": 1593354774.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "reactjs",
          "selftext": "hello!\n\ni need your help to find the best solution of drawing some rectangles in svg. it sounds stupid, right? i was under the impression that rendering some very simple 2d elements shouldn\u2019t be a problem nowadays but after finishing my attempted solution i discovered that when i\u2019m resizing my browser with the 100% wide svg in it it\u2019s not very smooth. despite i\u2019ve been working as mostly frontend developer for 15+ years i\u2019ve never done any svgs manually. so i took the time and read the whole svg section on mdn then a lot of articles, etc.\n\nthe svg is about drawing a keyboard or in this example only the keycaps. each keycap has two layers, a rounded rectangle as the base and a hollow one to imitate the sides (you\u2019ll understand when you see it). i made 7 different ways to draw the elements, some of them are more developer friendly (like reusing elements) some are silly but performing better (an endless list of paths for example). i added an animated version of them as well to make it faster to scan them through.\n\ni asked some friends to check it out and got way different feedbacks about what\u2019s the worst and the best in their browsers on their operating systems. i\u2019d like to get more feedback and that\u2019s why i\u2019m writing this post. please check the site and tell me what\u2019s the best one (or the top 3 if you have time) and what browser/os (version number would be nice) do you use.\n\nhere is the test page: https://svg-perf.vercel.app\n\nand the code: https://github.com/gex/svg-perf\n\ni used gatsby and react to make the svg and i know the problem has nothing to do with this (maybe i\u2019m wrong) but since it can be useful for others to see how they can make svgs manually in react i decided to post it here.\n\ni appreciate your help!",
          "author_fullname": "t2_o8m6d",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "svg performance in react",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/reactjs",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "link-flair-needs-help",
          "downs": 0,
          "thumbnail_height": null,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_hhddh4",
          "quarantine": false,
          "link_flair_text_color": "light",
          "upvote_ratio": 0.75,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 2,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "Needs Help",
          "can_mod_post": false,
          "score": 2,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "self",
          "edited": 1593346767.0,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1593375193.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.reactjs",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;hello!&lt;/p&gt;\n\n&lt;p&gt;i need your help to find the best solution of drawing some rectangles in svg. it sounds stupid, right? i was under the impression that rendering some very simple 2d elements shouldn\u2019t be a problem nowadays but after finishing my attempted solution i discovered that when i\u2019m resizing my browser with the 100% wide svg in it it\u2019s not very smooth. despite i\u2019ve been working as mostly frontend developer for 15+ years i\u2019ve never done any svgs manually. so i took the time and read the whole svg section on mdn then a lot of articles, etc.&lt;/p&gt;\n\n&lt;p&gt;the svg is about drawing a keyboard or in this example only the keycaps. each keycap has two layers, a rounded rectangle as the base and a hollow one to imitate the sides (you\u2019ll understand when you see it). i made 7 different ways to draw the elements, some of them are more developer friendly (like reusing elements) some are silly but performing better (an endless list of paths for example). i added an animated version of them as well to make it faster to scan them through.&lt;/p&gt;\n\n&lt;p&gt;i asked some friends to check it out and got way different feedbacks about what\u2019s the worst and the best in their browsers on their operating systems. i\u2019d like to get more feedback and that\u2019s why i\u2019m writing this post. please check the site and tell me what\u2019s the best one (or the top 3 if you have time) and what browser/os (version number would be nice) do you use.&lt;/p&gt;\n\n&lt;p&gt;here is the test page: &lt;a href=\"https://svg-perf.vercel.app\"&gt;https://svg-perf.vercel.app&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;and the code: &lt;a href=\"https://github.com/gex/svg-perf\"&gt;https://github.com/gex/svg-perf&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;i used gatsby and react to make the svg and i know the problem has nothing to do with this (maybe i\u2019m wrong) but since it can be useful for others to see how they can make svgs manually in react i decided to post it here.&lt;/p&gt;\n\n&lt;p&gt;i appreciate your help!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": "confidence",
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "c808a3ce-8520-11e8-b3d4-0e03aa55af0c",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2zldd",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "#b8001f",
          "id": "hhddh4",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "szexigexi",
          "discussion_type": null,
          "num_comments": 0,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/reactjs/comments/hhddh4/svg_performance_in_react/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/reactjs/comments/hhddh4/svg_performance_in_react/",
          "subreddit_subscribers": 196763,
          "created_utc": 1593346393.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "reactjs",
          "selftext": "I\u2019m going to be driving across the country the next couple days and was hoping to listen to an audio book that might help me increase my coding knowledge. I\u2019ve built a couple projects in react but am relatively new to it. Any recommendations for books that would translate well to an audio book?",
          "author_fullname": "t2_12xgd8",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "React audio books?",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/reactjs",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "thumbnail_height": null,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_hhqx4i",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 1.0,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 1,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 1,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "self",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1593423732.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.reactjs",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I\u2019m going to be driving across the country the next couple days and was hoping to listen to an audio book that might help me increase my coding knowledge. I\u2019ve built a couple projects in react but am relatively new to it. Any recommendations for books that would translate well to an audio book?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": "confidence",
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2zldd",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "hhqx4i",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "lukewarmcarrotjuice",
          "discussion_type": null,
          "num_comments": 2,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/reactjs/comments/hhqx4i/react_audio_books/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/reactjs/comments/hhqx4i/react_audio_books/",
          "subreddit_subscribers": 196763,
          "created_utc": 1593394932.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "reactjs",
          "selftext": "I just learned how to use React in the past couple days. I was wondering what are the best practices for controlling what the user sees? For ex: switching from a create user screen -&gt; login screen. I use states like switch cases for what screen or components get rendered to screen. I want to know how production level code achieves the same task programatically? The link has a image to my code. \nhttps://paste.pics/9FDXN",
          "author_fullname": "t2_7tpm0",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "React: Controlling user interface",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/reactjs",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "link-flair-code-review",
          "downs": 0,
          "thumbnail_height": null,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_hhpuaw",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 1.0,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 1,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "Code Review Request",
          "can_mod_post": false,
          "score": 1,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "self",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "post_hint": "self",
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1593419433.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.reactjs",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I just learned how to use React in the past couple days. I was wondering what are the best practices for controlling what the user sees? For ex: switching from a create user screen -&amp;gt; login screen. I use states like switch cases for what screen or components get rendered to screen. I want to know how production level code achieves the same task programatically? The link has a image to my code. \n&lt;a href=\"https://paste.pics/9FDXN\"&gt;https://paste.pics/9FDXN&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": "confidence",
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "preview": {
            "images": [
              {
                "source": {
                  "url": "https://external-preview.redd.it/vQONu4EBF0tqDn6a5ZZdMyhrdzHBH9BR7unY6kr-Myo.jpg?auto=webp&amp;s=0551eb670940fa32a02006e5c81985f9f08f43f8",
                  "width": 377,
                  "height": 866
                },
                "resolutions": [
                  {
                    "url": "https://external-preview.redd.it/vQONu4EBF0tqDn6a5ZZdMyhrdzHBH9BR7unY6kr-Myo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=c386583d41a74df49e6e27675b95071957c47d29",
                    "width": 108,
                    "height": 216
                  },
                  {
                    "url": "https://external-preview.redd.it/vQONu4EBF0tqDn6a5ZZdMyhrdzHBH9BR7unY6kr-Myo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=a1bbb73e87c5cf92c2d71bf29c1b9dea35a6fc67",
                    "width": 216,
                    "height": 432
                  },
                  {
                    "url": "https://external-preview.redd.it/vQONu4EBF0tqDn6a5ZZdMyhrdzHBH9BR7unY6kr-Myo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=1d6c24aa384cdc85234ffdb5173135ef5cc3b67c",
                    "width": 320,
                    "height": 640
                  }
                ],
                "variants": {},
                "id": "xFLF39xLTMrk8KKOr_GADxT-dM0uVrsJYBzYIzfjzaI"
              }
            ],
            "enabled": false
          },
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "178ea150-4b81-11ea-89a7-0ec4d26e08ff",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2zldd",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "#ff4500",
          "id": "hhpuaw",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "Hutster911",
          "discussion_type": null,
          "num_comments": 4,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/reactjs/comments/hhpuaw/react_controlling_user_interface/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/reactjs/comments/hhpuaw/react_controlling_user_interface/",
          "subreddit_subscribers": 196763,
          "created_utc": 1593390633.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "reactjs",
          "selftext": "Hello,\n\nI put a black background on my website and noticed this issue.\n\nIf you are on 1 page for some time then go to a different page. Whilst loading the page there is a white screen for a second then the page loads. \n\nHas anyone had this issue before or is it normal? \n\n&amp;#x200B;\n\nThanks in advance",
          "author_fullname": "t2_5t6p3p5",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "React Some Times On-Page Change the website becomes white for a second then loads the page",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/reactjs",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "link-flair-needs-help",
          "downs": 0,
          "thumbnail_height": null,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_hhmq2k",
          "quarantine": false,
          "link_flair_text_color": "light",
          "upvote_ratio": 1.0,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 1,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "Needs Help",
          "can_mod_post": false,
          "score": 1,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "self",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1593408112.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.reactjs",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello,&lt;/p&gt;\n\n&lt;p&gt;I put a black background on my website and noticed this issue.&lt;/p&gt;\n\n&lt;p&gt;If you are on 1 page for some time then go to a different page. Whilst loading the page there is a white screen for a second then the page loads. &lt;/p&gt;\n\n&lt;p&gt;Has anyone had this issue before or is it normal? &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Thanks in advance&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": "confidence",
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "c808a3ce-8520-11e8-b3d4-0e03aa55af0c",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2zldd",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "#b8001f",
          "id": "hhmq2k",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "nebling",
          "discussion_type": null,
          "num_comments": 8,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/reactjs/comments/hhmq2k/react_some_times_onpage_change_the_website/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/reactjs/comments/hhmq2k/react_some_times_onpage_change_the_website/",
          "subreddit_subscribers": 196763,
          "created_utc": 1593379312.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "reactjs",
          "selftext": "I'm learning React, and playing around with [https://pokeapi.co/](https://pokeapi.co/)\n\nI am using axios to get a list of 20 Pokemon:`axios.get('`[`https://pokeapi.co/api/v2/pokemon/`](https://pokeapi.co/api/v2/pokemon/)`')`\n\nThis returns an array of objects. Each object has a Pokemon's name, and the API endpoint for more detail on that specific Pokemon.\n\nI want to do the following:\n\n1. Get the list of 20 Pokemon\n2. Iterate through the array and call each Pokemon detail endpoint\n\nI have this code, which is working, but seems not ideal because I'm getting into what I believe is referred to as \"callback hell\":\n\nconst \\[characters, setCharacters\\] = React.useState(\\[\\]);\n\n    React.useEffect( () =&gt; {\n        // make axios call for list of pokemon\n    \n        axios.get('https://pokeapi.co/api/v2/pokemon/')\n          .then( result =&gt; {\n            result.data.results.forEach( character =&gt;\n              axios.get(character.url)\n                  .then( result =&gt; \n                    setCharacters(\n                      // add the pokemon object to the characters array\n                        characters =&gt; [...characters, result.data])\n                    )\n                  )\n                  .catch( error =&gt; console.error(error));\n          })\n          .catch( error =&gt; {\n            console.error(error);\n          });\n      }, []);\n\nI've been looking at Promise.all()/axios.all() but I'm a bit confused as to how I should call it.\n\nMy initial thought is I should make the first axios call to get a list of Pokemon and their detail URL. Once the promise resolves, I would make an array of `axios.get` promises, so something like this:\n\n    const [characters, setCharacters] = React.useState([]);\n    \n    React.useEffect( () =&gt; {\n        // make axios call for list of pokemon\n    \n        axios.get('https://pokeapi.co/api/v2/pokemon/')\n          .then( result =&gt; {\n            const pokemonUrls = [];\n            result.data.results.forEach( character =&gt;\n              pokemonUrls.push(character.url)\n            )\n          })\n          .catch( error =&gt; {\n            console.error(error);\n          });\n      }, []);\n\nI'm a little confused on what I would do next. Would I call `Promise.all(pokemonUrls)` in that initial `.then()` block? Or do I need to create a new side effect hook?\n\nAny direction so I can know what direction to take next would be very appreciated.",
          "author_fullname": "t2_bd6mz",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Using Promise.all with axios and side effects",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/reactjs",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "link-flair-needs-help",
          "downs": 0,
          "thumbnail_height": null,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_hhm0f0",
          "quarantine": false,
          "link_flair_text_color": "light",
          "upvote_ratio": 1.0,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 1,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "Needs Help",
          "can_mod_post": false,
          "score": 1,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "self",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1593405687.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.reactjs",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m learning React, and playing around with &lt;a href=\"https://pokeapi.co/\"&gt;https://pokeapi.co/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I am using axios to get a list of 20 Pokemon:&lt;code&gt;axios.get(&amp;#39;&lt;/code&gt;&lt;a href=\"https://pokeapi.co/api/v2/pokemon/\"&gt;&lt;code&gt;https://pokeapi.co/api/v2/pokemon/&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;#39;)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;This returns an array of objects. Each object has a Pokemon&amp;#39;s name, and the API endpoint for more detail on that specific Pokemon.&lt;/p&gt;\n\n&lt;p&gt;I want to do the following:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Get the list of 20 Pokemon&lt;/li&gt;\n&lt;li&gt;Iterate through the array and call each Pokemon detail endpoint&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;I have this code, which is working, but seems not ideal because I&amp;#39;m getting into what I believe is referred to as &amp;quot;callback hell&amp;quot;:&lt;/p&gt;\n\n&lt;p&gt;const [characters, setCharacters] = React.useState([]);&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;React.useEffect( () =&amp;gt; {\n    // make axios call for list of pokemon\n\n    axios.get(&amp;#39;https://pokeapi.co/api/v2/pokemon/&amp;#39;)\n      .then( result =&amp;gt; {\n        result.data.results.forEach( character =&amp;gt;\n          axios.get(character.url)\n              .then( result =&amp;gt; \n                setCharacters(\n                  // add the pokemon object to the characters array\n                    characters =&amp;gt; [...characters, result.data])\n                )\n              )\n              .catch( error =&amp;gt; console.error(error));\n      })\n      .catch( error =&amp;gt; {\n        console.error(error);\n      });\n  }, []);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I&amp;#39;ve been looking at Promise.all()/axios.all() but I&amp;#39;m a bit confused as to how I should call it.&lt;/p&gt;\n\n&lt;p&gt;My initial thought is I should make the first axios call to get a list of Pokemon and their detail URL. Once the promise resolves, I would make an array of &lt;code&gt;axios.get&lt;/code&gt; promises, so something like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const [characters, setCharacters] = React.useState([]);\n\nReact.useEffect( () =&amp;gt; {\n    // make axios call for list of pokemon\n\n    axios.get(&amp;#39;https://pokeapi.co/api/v2/pokemon/&amp;#39;)\n      .then( result =&amp;gt; {\n        const pokemonUrls = [];\n        result.data.results.forEach( character =&amp;gt;\n          pokemonUrls.push(character.url)\n        )\n      })\n      .catch( error =&amp;gt; {\n        console.error(error);\n      });\n  }, []);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I&amp;#39;m a little confused on what I would do next. Would I call &lt;code&gt;Promise.all(pokemonUrls)&lt;/code&gt; in that initial &lt;code&gt;.then()&lt;/code&gt; block? Or do I need to create a new side effect hook?&lt;/p&gt;\n\n&lt;p&gt;Any direction so I can know what direction to take next would be very appreciated.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": "confidence",
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "c808a3ce-8520-11e8-b3d4-0e03aa55af0c",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2zldd",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "#b8001f",
          "id": "hhm0f0",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "lolwannabe",
          "discussion_type": null,
          "num_comments": 2,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/reactjs/comments/hhm0f0/using_promiseall_with_axios_and_side_effects/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/reactjs/comments/hhm0f0/using_promiseall_with_axios_and_side_effects/",
          "subreddit_subscribers": 196763,
          "created_utc": 1593376887.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "reactjs",
          "selftext": "I have a sidebar component which can be hidden by sliding to the left.\n\nI want that sidebar component to toggle itself back on when it approaches a certain size. In doing so, I have come up with google searches, some examples does its job showing the specific browser window size, but when I alter the state, it rerenders every time a pixel is changed on resize, resulting in an infinite loop.\n\nHow can I prevent this?",
          "author_fullname": "t2_2a0oho0x",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Changing state based on window resize (infinite loop error)",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/reactjs",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "link-flair-needs-help",
          "downs": 0,
          "thumbnail_height": null,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_hhlobm",
          "quarantine": false,
          "link_flair_text_color": "light",
          "upvote_ratio": 1.0,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 1,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "Needs Help",
          "can_mod_post": false,
          "score": 1,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "self",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1593404581.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.reactjs",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have a sidebar component which can be hidden by sliding to the left.&lt;/p&gt;\n\n&lt;p&gt;I want that sidebar component to toggle itself back on when it approaches a certain size. In doing so, I have come up with google searches, some examples does its job showing the specific browser window size, but when I alter the state, it rerenders every time a pixel is changed on resize, resulting in an infinite loop.&lt;/p&gt;\n\n&lt;p&gt;How can I prevent this?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": "confidence",
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "c808a3ce-8520-11e8-b3d4-0e03aa55af0c",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2zldd",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "#b8001f",
          "id": "hhlobm",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "Nirioppai",
          "discussion_type": null,
          "num_comments": 5,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/reactjs/comments/hhlobm/changing_state_based_on_window_resize_infinite/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/reactjs/comments/hhlobm/changing_state_based_on_window_resize_infinite/",
          "subreddit_subscribers": 196763,
          "created_utc": 1593375781.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "reactjs",
          "selftext": "Hello all,\n\nQuick question; When I send a post request from my front-end to my back-end, I receive everything as strings. e.g. a form field that is a boolean, in the server is received as \"true\" rather than simple true.\n\n&amp;#x200B;\n\nSo in the back-end I have to do something like body.booleanField = body.booleanField === 'true'\n\nIs there a way to avoid this? thank you in advance and regards",
          "author_fullname": "t2_30go39zl",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Proper way to send axios request?",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/reactjs",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "link-flair-needs-help",
          "downs": 0,
          "thumbnail_height": null,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_hhgxpg",
          "quarantine": false,
          "link_flair_text_color": "light",
          "upvote_ratio": 0.6,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 1,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "Needs Help",
          "can_mod_post": false,
          "score": 1,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "self",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1593389082.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.reactjs",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello all,&lt;/p&gt;\n\n&lt;p&gt;Quick question; When I send a post request from my front-end to my back-end, I receive everything as strings. e.g. a form field that is a boolean, in the server is received as &amp;quot;true&amp;quot; rather than simple true.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;So in the back-end I have to do something like body.booleanField = body.booleanField === &amp;#39;true&amp;#39;&lt;/p&gt;\n\n&lt;p&gt;Is there a way to avoid this? thank you in advance and regards&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": "confidence",
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "c808a3ce-8520-11e8-b3d4-0e03aa55af0c",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2zldd",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "#b8001f",
          "id": "hhgxpg",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "dejavits",
          "discussion_type": null,
          "num_comments": 7,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/reactjs/comments/hhgxpg/proper_way_to_send_axios_request/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/reactjs/comments/hhgxpg/proper_way_to_send_axios_request/",
          "subreddit_subscribers": 196763,
          "created_utc": 1593360282.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "reactjs",
          "selftext": "Suppose we have a contact list, we get the list with an ajax call `fetchList()` in &lt;`Parent&gt;` component and give the list as a prop to `&lt;Children&gt;.`\n\nSuppose we add a new contact and send a post request to our server. now we want to show the updated contact list in `&lt;Children&gt;`, how do you go about it?\n\n1. pass a `forceRefetch` prop to `&lt;Children&gt;` and call it when the post request is successful?\n2. keep the initial list in `&lt;Children&gt;` or `&lt;Parent&gt;` state and append the new contact locally. in this case there may be some inconsistencies between server data and the date you're showing to the user.\n3. ?\n\n&amp;#x200B;\n\n    &lt;Parent fetch={fetchList}&gt;\n    {(fetchResult) =&gt; (\n        &lt;Children list={fetchResult} /&gt;\n    )}\n    &lt;/Parent&gt;",
          "author_fullname": "t2_40ofuvyl",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "How do you handle this data fetching scenario in ReactJS?",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/reactjs",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "link-flair-discussion",
          "downs": 0,
          "thumbnail_height": null,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_hhgbfr",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 0.66,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 1,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "Discussion",
          "can_mod_post": false,
          "score": 1,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "self",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1593386938.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.reactjs",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Suppose we have a contact list, we get the list with an ajax call &lt;code&gt;fetchList()&lt;/code&gt; in &amp;lt;&lt;code&gt;Parent&amp;gt;&lt;/code&gt; component and give the list as a prop to &lt;code&gt;&amp;lt;Children&amp;gt;.&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Suppose we add a new contact and send a post request to our server. now we want to show the updated contact list in &lt;code&gt;&amp;lt;Children&amp;gt;&lt;/code&gt;, how do you go about it?&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;pass a &lt;code&gt;forceRefetch&lt;/code&gt; prop to &lt;code&gt;&amp;lt;Children&amp;gt;&lt;/code&gt; and call it when the post request is successful?&lt;/li&gt;\n&lt;li&gt;keep the initial list in &lt;code&gt;&amp;lt;Children&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;Parent&amp;gt;&lt;/code&gt; state and append the new contact locally. in this case there may be some inconsistencies between server data and the date you&amp;#39;re showing to the user.&lt;/li&gt;\n&lt;li&gt;?&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;Parent fetch={fetchList}&amp;gt;\n{(fetchResult) =&amp;gt; (\n    &amp;lt;Children list={fetchResult} /&amp;gt;\n)}\n&amp;lt;/Parent&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": "confidence",
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "01a7aefe-4b81-11ea-bbb7-0e04580e4d4d",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2zldd",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "#73ad34",
          "id": "hhgbfr",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "fiveMop",
          "discussion_type": null,
          "num_comments": 7,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/reactjs/comments/hhgbfr/how_do_you_handle_this_data_fetching_scenario_in/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/reactjs/comments/hhgbfr/how_do_you_handle_this_data_fetching_scenario_in/",
          "subreddit_subscribers": 196763,
          "created_utc": 1593358138.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "reactjs",
          "selftext": "hello all, I have a custom hook for infinite scrolling I'd like to get working. I have an api that returns 500 items I want it to only return 15 items at a time with scroll but I'm struggling to implement it. I can set the initial data state to be 15 with the slice method but I don't know how to go about incrementing it. I tried storing the data in an outside variable and then incrementing with slice but that didn't work for me or maybe the implementation was wrong. here's a codepen [https://codesandbox.io/s/quirky-feynman-plf3q?file=/src/api.js](https://codesandbox.io/s/quirky-feynman-plf3q?file=/src/api.js) \n\nall help is appreciated",
          "author_fullname": "t2_1ussmm90",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "using infinite scroll custom hook with a real api",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/reactjs",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "thumbnail_height": null,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_hhgbee",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 1.0,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 1,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 1,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "self",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "post_hint": "self",
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1593386933.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.reactjs",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;hello all, I have a custom hook for infinite scrolling I&amp;#39;d like to get working. I have an api that returns 500 items I want it to only return 15 items at a time with scroll but I&amp;#39;m struggling to implement it. I can set the initial data state to be 15 with the slice method but I don&amp;#39;t know how to go about incrementing it. I tried storing the data in an outside variable and then incrementing with slice but that didn&amp;#39;t work for me or maybe the implementation was wrong. here&amp;#39;s a codepen &lt;a href=\"https://codesandbox.io/s/quirky-feynman-plf3q?file=/src/api.js\"&gt;https://codesandbox.io/s/quirky-feynman-plf3q?file=/src/api.js&lt;/a&gt; &lt;/p&gt;\n\n&lt;p&gt;all help is appreciated&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": "confidence",
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "preview": {
            "images": [
              {
                "source": {
                  "url": "https://external-preview.redd.it/lxrbxLdQlwFh35jCx2VvO1DBWyNian41ODxZBrHIEYE.jpg?auto=webp&amp;s=cb15756a080a12a99cbffc86e1263a21d97b2038",
                  "width": 1200,
                  "height": 630
                },
                "resolutions": [
                  {
                    "url": "https://external-preview.redd.it/lxrbxLdQlwFh35jCx2VvO1DBWyNian41ODxZBrHIEYE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=0bbb2b93a5a42b6eb9e07c42169993ef26dcf36e",
                    "width": 108,
                    "height": 56
                  },
                  {
                    "url": "https://external-preview.redd.it/lxrbxLdQlwFh35jCx2VvO1DBWyNian41ODxZBrHIEYE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=1a3be338114d66f8ee6d64d36a5c292db92bbcbe",
                    "width": 216,
                    "height": 113
                  },
                  {
                    "url": "https://external-preview.redd.it/lxrbxLdQlwFh35jCx2VvO1DBWyNian41ODxZBrHIEYE.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=82b914e01735f765a9d81f06a6b1f700ab69c950",
                    "width": 320,
                    "height": 168
                  },
                  {
                    "url": "https://external-preview.redd.it/lxrbxLdQlwFh35jCx2VvO1DBWyNian41ODxZBrHIEYE.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=7c1e786dc3077fbbcfea0566966d24f2a96d558a",
                    "width": 640,
                    "height": 336
                  },
                  {
                    "url": "https://external-preview.redd.it/lxrbxLdQlwFh35jCx2VvO1DBWyNian41ODxZBrHIEYE.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=4271179dc1da20bcb854a8c8cd62b2474cbd3e4b",
                    "width": 960,
                    "height": 504
                  },
                  {
                    "url": "https://external-preview.redd.it/lxrbxLdQlwFh35jCx2VvO1DBWyNian41ODxZBrHIEYE.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=9c351225446db77bbc4ea4b4961b7f6fe7d7ef83",
                    "width": 1080,
                    "height": 567
                  }
                ],
                "variants": {},
                "id": "fjT760L17qzZKNBAI-2IKblB-aR89A9sHHwmMj55Ypg"
              }
            ],
            "enabled": false
          },
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2zldd",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "hhgbee",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "Jiibaro",
          "discussion_type": null,
          "num_comments": 1,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/reactjs/comments/hhgbee/using_infinite_scroll_custom_hook_with_a_real_api/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/reactjs/comments/hhgbee/using_infinite_scroll_custom_hook_with_a_real_api/",
          "subreddit_subscribers": 196763,
          "created_utc": 1593358133.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "reactjs",
          "selftext": "I'm writing a book and will be creating some examples with style themes. There are quite a few options but I'm planning on either building themes with styled-components or CSS variables (or both). \n\nWhile I have opinions on how I may proceed here, I'd love any feedback you may have! Additionally, there's a Twitter poll available here: [https://twitter.com/ryanlanciaux/status/1276892456978710529](https://twitter.com/ryanlanciaux/status/1276892456978710529)",
          "author_fullname": "t2_733smqg5",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Styling (CSS / styled-components) examples in learning materials?",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/reactjs",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": null,
          "downs": 0,
          "thumbnail_height": null,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_hhg680",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 0.6,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 1,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": null,
          "can_mod_post": false,
          "score": 1,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "self",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "post_hint": "self",
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1593386439.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.reactjs",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m writing a book and will be creating some examples with style themes. There are quite a few options but I&amp;#39;m planning on either building themes with styled-components or CSS variables (or both). &lt;/p&gt;\n\n&lt;p&gt;While I have opinions on how I may proceed here, I&amp;#39;d love any feedback you may have! Additionally, there&amp;#39;s a Twitter poll available here: &lt;a href=\"https://twitter.com/ryanlanciaux/status/1276892456978710529\"&gt;https://twitter.com/ryanlanciaux/status/1276892456978710529&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": "confidence",
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "preview": {
            "images": [
              {
                "source": {
                  "url": "https://external-preview.redd.it/ZjsDwYMp9hB7bR2c8kgeXlCqbJ1Y_qAxFr-xsTOBdLM.jpg?auto=webp&amp;s=75872ac7fd1e87bb07ff3f19d5bce47a40c31161",
                  "width": 140,
                  "height": 140
                },
                "resolutions": [
                  {
                    "url": "https://external-preview.redd.it/ZjsDwYMp9hB7bR2c8kgeXlCqbJ1Y_qAxFr-xsTOBdLM.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=18334293a3f4f54fab15bc09cf22df1ffcdb1caa",
                    "width": 108,
                    "height": 108
                  }
                ],
                "variants": {},
                "id": "31fXbIQ-drWb9ZS2yma6ju76UZYTlY9VRLVY5WmcYYQ"
              }
            ],
            "enabled": false
          },
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2zldd",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "",
          "id": "hhg680",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "rlanci",
          "discussion_type": null,
          "num_comments": 0,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/reactjs/comments/hhg680/styling_css_styledcomponents_examples_in_learning/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/reactjs/comments/hhg680/styling_css_styledcomponents_examples_in_learning/",
          "subreddit_subscribers": 196763,
          "created_utc": 1593357639.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "reactjs",
          "selftext": "I want to fetch and regex the data multiple times before displaying it. What is the state-of-the-art-way to do this while keeping a buttersmooth UI in 2020 in React?\n\nBonus question: If web workers which lib?",
          "author_fullname": "t2_2x0723cu",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Web Worker vs Concurrent Mode in 2020?",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/reactjs",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "link-flair-needs-help",
          "downs": 0,
          "thumbnail_height": null,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_hhfxu6",
          "quarantine": false,
          "link_flair_text_color": "light",
          "upvote_ratio": 0.66,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 1,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "Needs Help",
          "can_mod_post": false,
          "score": 1,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "self",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1593385611.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.reactjs",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I want to fetch and regex the data multiple times before displaying it. What is the state-of-the-art-way to do this while keeping a buttersmooth UI in 2020 in React?&lt;/p&gt;\n\n&lt;p&gt;Bonus question: If web workers which lib?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": "confidence",
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "c808a3ce-8520-11e8-b3d4-0e03aa55af0c",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2zldd",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "#b8001f",
          "id": "hhfxu6",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "desmap",
          "discussion_type": null,
          "num_comments": 1,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/reactjs/comments/hhfxu6/web_worker_vs_concurrent_mode_in_2020/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/reactjs/comments/hhfxu6/web_worker_vs_concurrent_mode_in_2020/",
          "subreddit_subscribers": 196763,
          "created_utc": 1593356811.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "reactjs",
          "selftext": "",
          "author_fullname": "t2_23ge2tbw",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Practical use cases of Sets in javascript",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/reactjs",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "link-flair-show",
          "downs": 0,
          "thumbnail_height": 78,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_hhct20",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 0.66,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 1,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": 140,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "Show /r/reactjs",
          "can_mod_post": false,
          "score": 1,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "https://b.thumbs.redditmedia.com/fy4godTGGZ1rz5EH2p2anD9c58zG0rhrhX2eJgEKXQQ.jpg",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "post_hint": "link",
          "content_categories": null,
          "is_self": false,
          "mod_note": null,
          "created": 1593372245.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "medium.com",
          "allow_live_comments": false,
          "selftext_html": null,
          "likes": null,
          "suggested_sort": "confidence",
          "banned_at_utc": null,
          "url_overridden_by_dest": "https://medium.com/@rananitesh99/practical-use-cases-of-sets-in-javascript-bb0a3309675",
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "preview": {
            "images": [
              {
                "source": {
                  "url": "https://external-preview.redd.it/Oag2auzigwWpnwQtcB--o799vNNGHF6rVNANEIMgzMI.jpg?auto=webp&amp;s=e28dd81f52c84b02337f758f26b1d647b4242f1a",
                  "width": 600,
                  "height": 337
                },
                "resolutions": [
                  {
                    "url": "https://external-preview.redd.it/Oag2auzigwWpnwQtcB--o799vNNGHF6rVNANEIMgzMI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=46ef1dd89a1acc036664ce83f73e35de5d070496",
                    "width": 108,
                    "height": 60
                  },
                  {
                    "url": "https://external-preview.redd.it/Oag2auzigwWpnwQtcB--o799vNNGHF6rVNANEIMgzMI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=3707ce22134a1dcfe48917dbe56ad252896d96c5",
                    "width": 216,
                    "height": 121
                  },
                  {
                    "url": "https://external-preview.redd.it/Oag2auzigwWpnwQtcB--o799vNNGHF6rVNANEIMgzMI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3bed6f0ced41526946ccf084985d775c6e53e148",
                    "width": 320,
                    "height": 179
                  }
                ],
                "variants": {},
                "id": "_tTd_y3Lbf65XFW3_fTsIsotlw2QszIvWYmFib0J5Dw"
              }
            ],
            "enabled": false
          },
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "bd8d97ec-8520-11e8-9179-0e39e47dc3fc",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2zldd",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "#ab912b",
          "id": "hhct20",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "nitesh_rana",
          "discussion_type": null,
          "num_comments": 1,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/reactjs/comments/hhct20/practical_use_cases_of_sets_in_javascript/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://medium.com/@rananitesh99/practical-use-cases-of-sets-in-javascript-bb0a3309675",
          "subreddit_subscribers": 196763,
          "created_utc": 1593343445.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "reactjs",
          "selftext": "Redux came earlier, and was championed by Dan Abramov, which I believe goes a long way in explaining why it became so popular so fast.\n\nAnd at the time, there was no good state management best practices and no good solution.\n\nMobX in many ways is a much more advanced and functional paradigm, and it is decoupled from the UI library and strives to use modern JS features when available.\n\nDetails of the 3 approaches :-\n\nRedux:\n\nRedux has a global state tree. Components update this state by dispatching actions which use reducers to update relevant parts of the tree. Components then use mapStateToProps to derive interested state, and re-render.\n\nOne of the claims to fame of Redux is its immutable state tree which enables things like time travel debugging etc.\n\n&amp;#x200B;\n\nMobX:\n\nIn MobX you have observers and observables, using basic observer pattern. Once you hook them up, any changes to value in an observable (state) cause 'reactions' in the observer (re-render). MobX tracks all these internally. The actual mechanism for this is  whats often referred to as hidden 'magic', but its just using standard JS - getters/setters or ES6 proxies.\n\nIn addition to reaction there are also computed values (derived state) which is also reactive.\n\nThere is also MobX State Tree which is a tree with type information that can be an actual tree, and enables all the features of Redux's tree but with less code, less coupling and build in features.\n\nFundamentally MobX does prop injection into components to build a dependency graph and thus knows how to efficiently update something.\n\n&amp;#x200B;\n\nRecoil:\n\nRecoil implements the same idea as MobX - observables (atoms) and derived state (selectors) which are decoupled with the point of use. Thus it removes the primary limitation of Redux, which is needing every state update having to go via the global tree.\n\nBut Recoil is implemented on top of React. RecoilRoot is Context on steroids which can have multiple providers, and atoms are accessed via Hooks. Instead of using local array of the component, useRecoilState etc hooks lookup the key from the current recoil root (by walking up the tree). This is why there's no need for an observer decorator, and how Recoil knows who the listeners are.\n\nAnd it shares the same limitation of needing global unique keys as id's for atoms. And since Recoil knows both the definition of the observable (atom) and the observer (useRecoilState), and both are linked via RecoilRoot\\[id\\], it can hook up triggers to fire re-renders.\n\n&amp;#x200B;\n\nComparison:\n\nRedux is very low level, by design, and gives you hooks into each stage. This is why it has so much boilerplate, and why there are things like redux-toolkit (which reduces code by using things like Immer). Its like asking you to write a lexical analyzer, parser, tokenizer, codegen and letting you control each stage, vs calling .eval. This makes it conceptually clean with no hidden magic, but complex.\n\nAdding things like async etc needs even more complexity like sagas/thunks with even more boilerplate.\n\nBut this isn't the real problem. The big problem is the conceptual difference -\n\nRedux is basically like having all state in one gigantic object in your app root. And having each component implement shouldComponentUpdate using filters on that state, and updating parts of it. All the other parts/libs are just ways to do this.\n\nThis is tight coupling and dependence on state tree. Also, the state tree itself must be flat and normalized. Things like memoization etc are left to the user by using libs like reselect.\n\nReact Context works the same way - it was designed to allow passing props to the whole tree without needing to do it explicitly.\n\nRecoil is just combining Context and Hooks and providing nice syntax and depends on  React internals. Which is why they can add concurrent mode support and be more 'native'.\n\nTLDR - Recoil implements the same basic conceptual model of MobX, while sharing some drawbacks of Redux, but is tightly coupled to React.",
          "author_fullname": "t2_8z7kt",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Its a shame MobX never got recognition/adoption and Redux became the defacto standard, and now Recoil is implementing the same ideas",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/reactjs",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "link-flair-discussion",
          "downs": 0,
          "thumbnail_height": null,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_hhc7lq",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 0.56,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 3,
          "total_awards_received": 1,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "Discussion",
          "can_mod_post": false,
          "score": 3,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "self",
          "edited": 1593341758.0,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1593369067.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.reactjs",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Redux came earlier, and was championed by Dan Abramov, which I believe goes a long way in explaining why it became so popular so fast.&lt;/p&gt;\n\n&lt;p&gt;And at the time, there was no good state management best practices and no good solution.&lt;/p&gt;\n\n&lt;p&gt;MobX in many ways is a much more advanced and functional paradigm, and it is decoupled from the UI library and strives to use modern JS features when available.&lt;/p&gt;\n\n&lt;p&gt;Details of the 3 approaches :-&lt;/p&gt;\n\n&lt;p&gt;Redux:&lt;/p&gt;\n\n&lt;p&gt;Redux has a global state tree. Components update this state by dispatching actions which use reducers to update relevant parts of the tree. Components then use mapStateToProps to derive interested state, and re-render.&lt;/p&gt;\n\n&lt;p&gt;One of the claims to fame of Redux is its immutable state tree which enables things like time travel debugging etc.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;MobX:&lt;/p&gt;\n\n&lt;p&gt;In MobX you have observers and observables, using basic observer pattern. Once you hook them up, any changes to value in an observable (state) cause &amp;#39;reactions&amp;#39; in the observer (re-render). MobX tracks all these internally. The actual mechanism for this is  whats often referred to as hidden &amp;#39;magic&amp;#39;, but its just using standard JS - getters/setters or ES6 proxies.&lt;/p&gt;\n\n&lt;p&gt;In addition to reaction there are also computed values (derived state) which is also reactive.&lt;/p&gt;\n\n&lt;p&gt;There is also MobX State Tree which is a tree with type information that can be an actual tree, and enables all the features of Redux&amp;#39;s tree but with less code, less coupling and build in features.&lt;/p&gt;\n\n&lt;p&gt;Fundamentally MobX does prop injection into components to build a dependency graph and thus knows how to efficiently update something.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Recoil:&lt;/p&gt;\n\n&lt;p&gt;Recoil implements the same idea as MobX - observables (atoms) and derived state (selectors) which are decoupled with the point of use. Thus it removes the primary limitation of Redux, which is needing every state update having to go via the global tree.&lt;/p&gt;\n\n&lt;p&gt;But Recoil is implemented on top of React. RecoilRoot is Context on steroids which can have multiple providers, and atoms are accessed via Hooks. Instead of using local array of the component, useRecoilState etc hooks lookup the key from the current recoil root (by walking up the tree). This is why there&amp;#39;s no need for an observer decorator, and how Recoil knows who the listeners are.&lt;/p&gt;\n\n&lt;p&gt;And it shares the same limitation of needing global unique keys as id&amp;#39;s for atoms. And since Recoil knows both the definition of the observable (atom) and the observer (useRecoilState), and both are linked via RecoilRoot[id], it can hook up triggers to fire re-renders.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Comparison:&lt;/p&gt;\n\n&lt;p&gt;Redux is very low level, by design, and gives you hooks into each stage. This is why it has so much boilerplate, and why there are things like redux-toolkit (which reduces code by using things like Immer). Its like asking you to write a lexical analyzer, parser, tokenizer, codegen and letting you control each stage, vs calling .eval. This makes it conceptually clean with no hidden magic, but complex.&lt;/p&gt;\n\n&lt;p&gt;Adding things like async etc needs even more complexity like sagas/thunks with even more boilerplate.&lt;/p&gt;\n\n&lt;p&gt;But this isn&amp;#39;t the real problem. The big problem is the conceptual difference -&lt;/p&gt;\n\n&lt;p&gt;Redux is basically like having all state in one gigantic object in your app root. And having each component implement shouldComponentUpdate using filters on that state, and updating parts of it. All the other parts/libs are just ways to do this.&lt;/p&gt;\n\n&lt;p&gt;This is tight coupling and dependence on state tree. Also, the state tree itself must be flat and normalized. Things like memoization etc are left to the user by using libs like reselect.&lt;/p&gt;\n\n&lt;p&gt;React Context works the same way - it was designed to allow passing props to the whole tree without needing to do it explicitly.&lt;/p&gt;\n\n&lt;p&gt;Recoil is just combining Context and Hooks and providing nice syntax and depends on  React internals. Which is why they can add concurrent mode support and be more &amp;#39;native&amp;#39;.&lt;/p&gt;\n\n&lt;p&gt;TLDR - Recoil implements the same basic conceptual model of MobX, while sharing some drawbacks of Redux, but is tightly coupled to React.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": "confidence",
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [
            {
              "giver_coin_reward": null,
              "subreddit_id": null,
              "is_new": false,
              "days_of_drip_extension": 0,
              "coin_price": 300,
              "id": "award_68ba1ee3-9baf-4252-be52-b808c1e8bdc4",
              "penny_donate": null,
              "award_sub_type": "GLOBAL",
              "coin_reward": 0,
              "icon_url": "https://i.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png",
              "days_of_premium": 0,
              "resized_icons": [
                {
                  "url": "https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=16&amp;height=16&amp;auto=webp&amp;s=9c0a85437357b987e50ba727b67fcc53b0950c95",
                  "width": 16,
                  "height": 16
                },
                {
                  "url": "https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=32&amp;height=32&amp;auto=webp&amp;s=773692cd146e84fddcc3d192b6ebb7e0ff8fa8bb",
                  "width": 32,
                  "height": 32
                },
                {
                  "url": "https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=48&amp;height=48&amp;auto=webp&amp;s=597adeb2d7ab45cc61a726b7c7d6877d264ee33d",
                  "width": 48,
                  "height": 48
                },
                {
                  "url": "https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=64&amp;height=64&amp;auto=webp&amp;s=886636fb2fc59fc1c9a5e2d05cb3f2e0d42714b6",
                  "width": 64,
                  "height": 64
                },
                {
                  "url": "https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=128&amp;height=128&amp;auto=webp&amp;s=28657eedaaa67c90c4b4a97d134fe607bb92c975",
                  "width": 128,
                  "height": 128
                }
              ],
              "icon_width": 2048,
              "static_icon_width": 2048,
              "start_date": null,
              "is_enabled": true,
              "description": "Me approved",
              "end_date": null,
              "subreddit_coin_reward": 0,
              "count": 1,
              "static_icon_height": 2048,
              "name": "This",
              "resized_static_icons": [
                {
                  "url": "https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=16&amp;height=16&amp;auto=webp&amp;s=9c0a85437357b987e50ba727b67fcc53b0950c95",
                  "width": 16,
                  "height": 16
                },
                {
                  "url": "https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=32&amp;height=32&amp;auto=webp&amp;s=773692cd146e84fddcc3d192b6ebb7e0ff8fa8bb",
                  "width": 32,
                  "height": 32
                },
                {
                  "url": "https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=48&amp;height=48&amp;auto=webp&amp;s=597adeb2d7ab45cc61a726b7c7d6877d264ee33d",
                  "width": 48,
                  "height": 48
                },
                {
                  "url": "https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=64&amp;height=64&amp;auto=webp&amp;s=886636fb2fc59fc1c9a5e2d05cb3f2e0d42714b6",
                  "width": 64,
                  "height": 64
                },
                {
                  "url": "https://preview.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png?width=128&amp;height=128&amp;auto=webp&amp;s=28657eedaaa67c90c4b4a97d134fe607bb92c975",
                  "width": 128,
                  "height": 128
                }
              ],
              "icon_format": null,
              "icon_height": 2048,
              "penny_price": null,
              "award_type": "global",
              "static_icon_url": "https://i.redd.it/award_images/t5_22cerq/vu6om0xnb7e41_This.png"
            }
          ],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "01a7aefe-4b81-11ea-bbb7-0e04580e4d4d",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2zldd",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "#73ad34",
          "id": "hhc7lq",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "ECrispy",
          "discussion_type": null,
          "num_comments": 18,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/reactjs/comments/hhc7lq/its_a_shame_mobx_never_got_recognitionadoption/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/reactjs/comments/hhc7lq/its_a_shame_mobx_never_got_recognitionadoption/",
          "subreddit_subscribers": 196763,
          "created_utc": 1593340267.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "reactjs",
          "selftext": "Hello Friends. I created Xmoji, it is a emoji tab like MacOS emoji tab, so you can use emojis everywhere and every time with specific shortcut. It's fast and customizable. I'll be happy if you check and install it. Don't forget the . github: https://github.com/Aslemammad/Xmoji",
          "author_fullname": "t2_390n2u2z",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Emoji picker for your OS",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/reactjs",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "link-flair-show",
          "downs": 0,
          "thumbnail_height": null,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_hhbcvp",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 0.67,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 1,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "Show /r/reactjs",
          "can_mod_post": false,
          "score": 1,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "self",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "post_hint": "self",
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1593364250.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.reactjs",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello Friends. I created Xmoji, it is a emoji tab like MacOS emoji tab, so you can use emojis everywhere and every time with specific shortcut. It&amp;#39;s fast and customizable. I&amp;#39;ll be happy if you check and install it. Don&amp;#39;t forget the . github: &lt;a href=\"https://github.com/Aslemammad/Xmoji\"&gt;https://github.com/Aslemammad/Xmoji&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": "confidence",
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "preview": {
            "images": [
              {
                "source": {
                  "url": "https://external-preview.redd.it/Ek5ae6ElpQZKjEB66aIs7xj89btHlS2yHHUCs_ghDb4.jpg?auto=webp&amp;s=2f169539eadc7477c792b4f80e087d852f5dab0a",
                  "width": 400,
                  "height": 400
                },
                "resolutions": [
                  {
                    "url": "https://external-preview.redd.it/Ek5ae6ElpQZKjEB66aIs7xj89btHlS2yHHUCs_ghDb4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=b8473d9b6703277fd0fffce180b2566a05bdaa97",
                    "width": 108,
                    "height": 108
                  },
                  {
                    "url": "https://external-preview.redd.it/Ek5ae6ElpQZKjEB66aIs7xj89btHlS2yHHUCs_ghDb4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=da438d26a6a5e27b8a2cbce2014ec498ac8c2049",
                    "width": 216,
                    "height": 216
                  },
                  {
                    "url": "https://external-preview.redd.it/Ek5ae6ElpQZKjEB66aIs7xj89btHlS2yHHUCs_ghDb4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=6eaa651e4d381cd6b305165d093514d81b21f64b",
                    "width": 320,
                    "height": 320
                  }
                ],
                "variants": {},
                "id": "asBW0c9GSnOjzAN56MAWShX-x87YVu4uMLhTLYmtfAQ"
              }
            ],
            "enabled": false
          },
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "bd8d97ec-8520-11e8-9179-0e39e47dc3fc",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2zldd",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "#ab912b",
          "id": "hhbcvp",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "MBAbiat",
          "discussion_type": null,
          "num_comments": 0,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/reactjs/comments/hhbcvp/emoji_picker_for_your_os/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/reactjs/comments/hhbcvp/emoji_picker_for_your_os/",
          "subreddit_subscribers": 196763,
          "created_utc": 1593335450.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "reactjs",
          "selftext": "",
          "author_fullname": "t2_ilv8d",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "Show A PWA Update with Redux, React Hooks &amp; Service Workers",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/reactjs",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "link-flair-resource",
          "downs": 0,
          "thumbnail_height": null,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_hhq4rd",
          "quarantine": false,
          "link_flair_text_color": "dark",
          "upvote_ratio": 0.5,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 0,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "Resource",
          "can_mod_post": false,
          "score": 0,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "default",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": false,
          "mod_note": null,
          "created": 1593420573.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "orizens.com",
          "allow_live_comments": false,
          "selftext_html": null,
          "likes": null,
          "suggested_sort": "confidence",
          "banned_at_utc": null,
          "url_overridden_by_dest": "https://orizens.com/blog/show-a-pwa-update-with-redux-react-hooks-and-service%20workers/",
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "16439f02-8522-11e8-8849-0e66852ea1ba",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2zldd",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "#ffd635",
          "id": "hhq4rd",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "orizens",
          "discussion_type": null,
          "num_comments": 0,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/reactjs/comments/hhq4rd/show_a_pwa_update_with_redux_react_hooks_service/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://orizens.com/blog/show-a-pwa-update-with-redux-react-hooks-and-service%20workers/",
          "subreddit_subscribers": 196763,
          "created_utc": 1593391773.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      },
      {
        "kind": "t3",
        "data": {
          "approved_at_utc": null,
          "subreddit": "reactjs",
          "selftext": "Ever since I learned redux I can't help but feel that I've been absuing it (its really useful!!). But then I end up in situations where instead of using redux to 'save' the data retrieved from the db and retrieving it from props, just fetching the data directly would be helpful.\n\nAre there specific guidelines as to delineate which is better?",
          "author_fullname": "t2_tz5p0rl",
          "saved": false,
          "mod_reason_title": null,
          "gilded": 0,
          "clicked": false,
          "title": "When should I use redux vs. load things from the database",
          "link_flair_richtext": [],
          "subreddit_name_prefixed": "r/reactjs",
          "hidden": false,
          "pwls": 6,
          "link_flair_css_class": "link-flair-needs-help",
          "downs": 0,
          "thumbnail_height": null,
          "top_awarded_type": null,
          "hide_score": false,
          "name": "t3_hhnqiy",
          "quarantine": false,
          "link_flair_text_color": "light",
          "upvote_ratio": 0.5,
          "author_flair_background_color": null,
          "subreddit_type": "public",
          "ups": 0,
          "total_awards_received": 0,
          "media_embed": {},
          "thumbnail_width": null,
          "author_flair_template_id": null,
          "is_original_content": false,
          "user_reports": [],
          "secure_media": null,
          "is_reddit_media_domain": false,
          "is_meta": false,
          "category": null,
          "secure_media_embed": {},
          "link_flair_text": "Needs Help",
          "can_mod_post": false,
          "score": 0,
          "approved_by": null,
          "author_premium": false,
          "thumbnail": "self",
          "edited": false,
          "author_flair_css_class": null,
          "author_flair_richtext": [],
          "gildings": {},
          "content_categories": null,
          "is_self": true,
          "mod_note": null,
          "created": 1593411616.0,
          "link_flair_type": "text",
          "wls": 6,
          "removed_by_category": null,
          "banned_by": null,
          "author_flair_type": "text",
          "domain": "self.reactjs",
          "allow_live_comments": false,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Ever since I learned redux I can&amp;#39;t help but feel that I&amp;#39;ve been absuing it (its really useful!!). But then I end up in situations where instead of using redux to &amp;#39;save&amp;#39; the data retrieved from the db and retrieving it from props, just fetching the data directly would be helpful.&lt;/p&gt;\n\n&lt;p&gt;Are there specific guidelines as to delineate which is better?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "likes": null,
          "suggested_sort": "confidence",
          "banned_at_utc": null,
          "view_count": null,
          "archived": false,
          "no_follow": true,
          "is_crosspostable": false,
          "pinned": false,
          "over_18": false,
          "all_awardings": [],
          "awarders": [],
          "media_only": false,
          "link_flair_template_id": "c808a3ce-8520-11e8-b3d4-0e03aa55af0c",
          "can_gild": false,
          "spoiler": false,
          "locked": false,
          "author_flair_text": null,
          "treatment_tags": [],
          "visited": false,
          "removed_by": null,
          "num_reports": null,
          "distinguished": null,
          "subreddit_id": "t5_2zldd",
          "mod_reason_by": null,
          "removal_reason": null,
          "link_flair_background_color": "#b8001f",
          "id": "hhnqiy",
          "is_robot_indexable": true,
          "report_reasons": null,
          "author": "verysad1997",
          "discussion_type": null,
          "num_comments": 6,
          "send_replies": true,
          "whitelist_status": "all_ads",
          "contest_mode": false,
          "mod_reports": [],
          "author_patreon_flair": false,
          "author_flair_text_color": null,
          "permalink": "/r/reactjs/comments/hhnqiy/when_should_i_use_redux_vs_load_things_from_the/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "url": "https://www.reddit.com/r/reactjs/comments/hhnqiy/when_should_i_use_redux_vs_load_things_from_the/",
          "subreddit_subscribers": 196763,
          "created_utc": 1593382816.0,
          "num_crossposts": 0,
          "media": null,
          "is_video": false
        }
      }
    ],
    "after": "t3_hhnqiy",
    "before": null
  }
}
